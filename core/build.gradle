plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'

}

android {
    namespace 'com.example.domain'
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "API_KEY", "\"${properties.getProperty("API_KEY")}\""
        buildConfigField "String", "BASE_URL", "\"${properties.getProperty("BASE_URL")}\""
        buildConfigField "String", "DATABASE_VERSION", "\"${ProjectConfig.VERSION_NAME}\""
        buildConfigField "String", "DATABASE_NAME", "\"movie-app\""
        buildConfigField "int", "DATABASE_VERSION", "1"
        buildConfigField "boolean", "DATABASE_EXPORT_SCHEMA", "true"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion ProjectConfig.kotlinCompilerExtensionVersion
    }
    buildFeatures {
        buildConfig true
    }
}

dependencies {

    implementation libs.android.core.ktx
    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
    implementation libs.androidx.junit.ktx
    testImplementation libs.mockito
    testImplementation libs.arch
    testImplementation libs.coroutines.test
    testImplementation libs.room.test

    // Pager Indicator
    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicator

    //Retrofit
    implementation libs.retrofit
    implementation libs.retrofit.converter

    // Coroutines
    implementation libs.coroutine.android
    implementation libs.coroutine.play.services

    // Dependency Injection - Hilt
    kapt libs.dagger.hilt.compiler
    implementation libs.hilt.navigation.compose
    implementation libs.hilt.android

    // Navigation
    implementation libs.navigation.compose

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit.converter
    implementation libs.retrofit.converter.moshi

    //Pager
    implementation libs.accompanist.pager
    implementation libs.accompanist.pager.indicator

    //Truth
    testImplementation libs.truth

    // Paging 3
    implementation libs.paging.runtime
    implementation libs.paging.compose

    api(libs.moshi)
    implementation libs.moshi.adapters
    kapt libs.moshi.compiler

    implementation libs.logging
    implementation libs.okhttp

    // Coil
    implementation libs.coil
    //room
    api(libs.room.runtime)
    api(libs.room.paging)
    implementation libs.room.ktx
    kapt libs.room.compiler
}
kapt {
    correctErrorTypes true
}