// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import com.example.core.remote.service.HomeApiService;
import com.example.core.repos.home.MovieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideMovieRepositoryFactory implements Factory<MovieRepository> {
  private final Provider<HomeApiService> apiServiceProvider;

  public RepositoryModule_ProvideMovieRepositoryFactory(
      Provider<HomeApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public MovieRepository get() {
    return provideMovieRepository(apiServiceProvider.get());
  }

  public static RepositoryModule_ProvideMovieRepositoryFactory create(
      Provider<HomeApiService> apiServiceProvider) {
    return new RepositoryModule_ProvideMovieRepositoryFactory(apiServiceProvider);
  }

  public static MovieRepository provideMovieRepository(HomeApiService apiService) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideMovieRepository(apiService));
  }
}
