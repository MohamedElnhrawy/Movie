// Generated by Dagger (https://dagger.dev).
package com.example.home;

import com.example.core.usecase.home.HomeUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<HomeUseCases> homeUseCasesProvider;

  public HomeViewModel_Factory(Provider<HomeUseCases> homeUseCasesProvider) {
    this.homeUseCasesProvider = homeUseCasesProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(homeUseCasesProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<HomeUseCases> homeUseCasesProvider) {
    return new HomeViewModel_Factory(homeUseCasesProvider);
  }

  public static HomeViewModel newInstance(HomeUseCases homeUseCases) {
    return new HomeViewModel(homeUseCases);
  }
}
